def total_sales():
    sales = []
    for i in range(7):
        sale = float(input(f"Enter sales for day {i+1}: "))
        sales.append(sale)
    total = sum(sales)
    print(f"Total sales for the week: ${total:.2f}")

total_sales()


import random

def lottery_number_generator():
    lottery_numbers = []
    for _ in range(7):
        num = random.randint(0, 9)
        lottery_numbers.append(num)
    print("The generated lottery number is:", end=" ")
    for number in lottery_numbers:
        print(number, end=" ")

lottery_number_generator()


def rainfall_statistics():
    rainfall = [float(input(f"Enter rainfall for month {i+1}: ")) for i in range(12)]
    total = sum(rainfall)
    average = total / 12
    highest_month = rainfall.index(max(rainfall)) + 1
    lowest_month = rainfall.index(min(rainfall)) + 1
    print(f"Total rainfall for the year: {total:.2f}")
    print(f"Average monthly rainfall: {average:.2f}")
    print(f"Month with the highest rainfall: {highest_month}")
    print(f"Month with the lowest rainfall: {lowest_month}")

rainfall_statistics()



def number_analysis():
    numbers = [float(input("Enter a number: ")) for _ in range(20)]
    lowest = min(numbers)
    highest = max(numbers)
    total = sum(numbers)
    average = total / len(numbers)
    print(f"Lowest number: {lowest}")
    print(f"Highest number: {highest}")
    print(f"Total: {total}")
    print(f"Average: {average:.2f}")

number_analysis()



def charge_account_validation():
    with open('charge_accounts.txt', 'r') as file:
        accounts = [line.strip() for line in file]
    account_number = input("Enter a charge account number: ")
    if account_number in accounts:
        print("The number is valid.")
    else:
        print("The number is invalid.")

charge_account_validation()



def larger_than_n(lst, n):
    result = [x for x in lst if x > n]
    for number in result:
        print(number)

# Example usage
larger_than_n([1, 5, 10, 20, 25], 10)



def grade_exam():
    correct_answers = ['A', 'C', 'A', 'A', 'D', 'B', 'C', 'A', 'C', 'B', 
                       'A', 'D', 'C', 'A', 'D', 'C', 'B', 'B', 'D', 'A']
    student_answers = [input(f"Enter answer for question {i+1}: ") for i in range(20)]
    correct_count = sum(1 for i in range(20) if student_answers[i] == correct_answers[i])
    if correct_count >= 15:
        print("You passed the exam.")
    else:
        print("You failed the exam.")
    print(f"Correct answers: {correct_count}")
    print(f"Incorrect answers: {20 - correct_count}")

grade_exam()



def name_search():
    with open('popular_names.txt', 'r') as file:
        names = [line.strip() for line in file]
    name = input("Enter a name: ")
    if name in names:
        print("That was a popular name between 2000 and 2009.")
    else:
        print("That was not a popular name between 2000 and 2009.")

name_search()




def population_data():
    with open('USPopulation.txt', 'r') as file:
        populations = [int(line.strip()) for line in file]
    changes = [populations[i+1] - populations[i] for i in range(len(populations) - 1)]
    average_change = sum(changes) / len(changes)
    max_change_year = 1950 + changes.index(max(changes)) + 1
    min_change_year = 1950 + changes.index(min(changes)) + 1
    print(f"Average annual change: {average_change:.2f}")
    print(f"Year with greatest increase: {max_change_year}")
    print(f"Year with smallest increase: {min_change_year}")

population_data()



def world_series_champions():
    with open('WorldSeriesWinners.txt', 'r') as file:
        winners = [line.strip() for line in file]
    team = input("Enter the name of a team: ")
    count = winners.count(team)
    print(f"The {team} have won the World Series {count} times between 1903 and 2009.")

world_series_champions()
